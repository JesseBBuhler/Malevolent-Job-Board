// <auto-generated />
using Malevolent_Job_Board.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Malevolent_Job_Board.Migrations
{
    [DbContext(typeof(JobBoardContext))]
    partial class JobBoardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Malevolent_Job_Board.Models.Application", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PostID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resume")
                        .HasColumnType("TEXT");

                    b.HasKey("ApplicationID");

                    b.HasIndex("PostID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Malevolent_Job_Board.Models.PositionType", b =>
                {
                    b.Property<int>("PositionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PositionTypeDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PositionTypeID");

                    b.ToTable("PositionTypes");

                    b.HasData(
                        new
                        {
                            PositionTypeID = 1,
                            PositionTypeDesc = "Full Time"
                        },
                        new
                        {
                            PositionTypeID = 2,
                            PositionTypeDesc = "Part Time"
                        },
                        new
                        {
                            PositionTypeID = 3,
                            PositionTypeDesc = "Internship"
                        },
                        new
                        {
                            PositionTypeID = 4,
                            PositionTypeDesc = "Contract"
                        });
                });

            modelBuilder.Entity("Malevolent_Job_Board.Models.Post", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PositionTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostID");

                    b.HasIndex("PositionTypeID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostID = 1,
                            Company = "Mordor",
                            Description = "Sauron is in need of a right hand man to send after the plucky band of adventurers so that he doesn't have to go himself and blow the powerscale way out of balance.  It is imperative that a successful applicant have a tragic backstory that will make them sympathetic to the audience before their inevitable redemption arc.",
                            PositionTitle = "Treacherous Second In Command",
                            PositionTypeID = 1,
                            Salary = 150000
                        },
                        new
                        {
                            PostID = 2,
                            Company = "The Galactic Empire",
                            Description = "I need someone to find and kill Luke before the Emperor finds out that he may or may not actually be dead.",
                            PositionTitle = "Bounty Hunter",
                            PositionTypeID = 4,
                            Salary = 50000
                        },
                        new
                        {
                            PostID = 3,
                            Company = "The Unspeakable Void",
                            Description = "The Great Old One is looking for an intern to summon him from the beyond, perform ritual sacrifices, torment the local moody doctor, and other tasks that he just can't be bothered to do himself.  This is an unpaid internship but applicants will be given the opportunity to learn dark secrets not fit for the mind of man.",
                            PositionTitle = "Cthulhu's gopher",
                            PositionTypeID = 3,
                            Salary = 0
                        });
                });

            modelBuilder.Entity("Malevolent_Job_Board.Models.Application", b =>
                {
                    b.HasOne("Malevolent_Job_Board.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Malevolent_Job_Board.Models.Post", b =>
                {
                    b.HasOne("Malevolent_Job_Board.Models.PositionType", "PositionType")
                        .WithMany()
                        .HasForeignKey("PositionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
